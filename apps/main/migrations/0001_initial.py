# Generated by Django 5.1.1 on 2024-10-04 12:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Укажите уникальное название категории, например: 'Технологии'.", max_length=100, unique=True, verbose_name='Название категории')),
                ('description', models.TextField(blank=True, help_text='Добавьте подробное описание категории, чтобы пользователи могли понять, к чему относится эта категория.', verbose_name='Описание категории')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Введите уникальное название тега, например: 'Python', 'Новости'.", max_length=50, unique=True, verbose_name='Тег')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="Введите заголовок статьи, который будет привлекать внимание, например: 'Последние тренды в IT'.", max_length=200, verbose_name='Заголовок статьи')),
                ('content', models.TextField(help_text='Напишите полный текст статьи. Вы можете использовать любые доступные средства форматирования.', verbose_name='Содержание статьи')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время, когда статья была создана.', verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата и время последнего обновления статьи.', verbose_name='Дата обновления')),
                ('author', models.ForeignKey(help_text='Автор статьи автоматически определяется текущим пользователем.', on_delete=django.db.models.deletion.CASCADE, related_name='articles', to=settings.AUTH_USER_MODEL, verbose_name='Автор статьи')),
                ('categories', models.ManyToManyField(help_text='Выберите одну или несколько категорий, к которым относится эта статья.', related_name='articles', to='main.category', verbose_name='Категории')),
                ('tags', models.ManyToManyField(help_text="Добавьте теги для лучшего поиска статьи. Например: 'Технологии', 'Образование'.", related_name='articles', to='main.tag', verbose_name='Теги')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Введите содержимое комментария. Поделитесь своими мыслями о статье.', verbose_name='Текст комментария')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время, когда был оставлен комментарий.', verbose_name='Дата комментария')),
                ('article', models.ForeignKey(help_text='Статья, к которой относится комментарий.', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='main.article', verbose_name='Статья')),
                ('user', models.ForeignKey(help_text='Пользователь, оставивший комментарий.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(help_text='Статья, которая получила лайк.', on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='main.article', verbose_name='Статья')),
                ('user', models.ForeignKey(help_text='Пользователь, который поставил лайк статье.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лайк',
                'verbose_name_plural': 'Лайки',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Оцените статью по шкале от 1 до 5, где 5 — наивысшая оценка.', verbose_name='Оценка')),
                ('article', models.ForeignKey(help_text='Статья, которой присваивается рейтинг.', on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='main.article', verbose_name='Статья')),
                ('user', models.ForeignKey(help_text='Пользователь, который присвоил рейтинг статье.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Рейтинг',
                'verbose_name_plural': 'Рейтинги',
            },
        ),
    ]
